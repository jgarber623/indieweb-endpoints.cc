#!/usr/bin/env sh

set -e

DIRNAME=$(dirname -- "${0}")
SCRIPT_DIR=$(cd -- "${DIRNAME}" > /dev/null 2>&1 && pwd)

. "${SCRIPT_DIR}"/shared.lib.sh

# Set default service if none is provided.
SERVICE=app

usage() {
  cat << EOF

Execute a command inside a running container.

$(title USAGE)
  bin/exec [-h, --help] [-s SERVICE, --service=SERVICE] COMMAND

$(title OPTIONS)
  -h, --help                      Show this help.
  -s SERVICE, --service=SERVICE   Specify the Docker Compose service name for the command.
                                  (default: ${SERVICE})

$(title ARGUMENTS)
  COMMAND   A command line to execute within the container.

$(title EXAMPLES)
  bin/exec                     Log in to a command prompt.
  bin/exec bin/setup           Run the app's setup script.
  bin/exec -s db npm install   Run a command in the db service container.

EOF
}

# Support short options, long options, and double dash termination.
#
# Derived from: https://stackoverflow.com/a/28466267
while getopts :hs:-: OPT; do
  # Support long options by reformulating OPT and OPTARG.
  if [ "${OPT}" = "-" ]; then
    OPT="${OPTARG%%=*}"      # Extract long option name
    OPTARG="${OPTARG#$OPT}"  # Extract long option argument (may be empty)
    OPTARG="${OPTARG#=}"     # Remove assigning `=`
  fi

  case "${OPT}" in
    s | service)
      SERVICE="${OPTARG}"
      ;;
    h | help)
      usage
      exit
      ;;
    ??*) # Bad long option
      log "ðŸš¨ Invalid option: --${OPT}"
      exit 2
      ;;
    ?) # Bad short option
      log "ðŸš¨ Invalid option: -${OPTARG}"
      exit 2
      ;;
  esac
done
shift $((OPTIND-1)) # Remove parsed options and args from $@ list.

# Set default command if none is provided.
COMMAND="${@:-/usr/bin/env bash}"

check_for_docker

log "ðŸ¤– Executing command \"${COMMAND}\" within running \"${SERVICE}\" container..."
docker compose --file "${COMPOSE_FILE}" exec ${SERVICE} ${COMMAND}
